--- testdisk-6.11-WIP.orig/configure.ac	2008-10-17 11:54:45.691067124 -0600
+++ testdisk-6.11-WIP/configure.ac	2008-10-17 14:15:39.835606251 -0600
@@ -30,158 +30,165 @@
 
 # Command-line options.
 AC_ARG_WITH([ncurses],
-    AS_HELP_STRING(--without-ncurses,disabled use of the curses/ncurses/pdcurses/curses library (default is NO)),
-    [	use_ncurses="n" ])
+    AS_HELP_STRING([--without-ncurses],[disable use of the curses/ncurses/pdcurses/curses library @<:@default=no@:>@]),
+    [],
+    [ use_ncurses="yes" ])
 
-AC_ARG_WITH(ncurses-lib,
-    AS_HELP_STRING(--with-ncurses-lib=DIR,location of the ncurses library),
+AC_ARG_WITH([ncurses-lib],
+    AS_HELP_STRING([--with-ncurses-lib=DIR],[location of the ncurses library]),
     [ ncurses_lib_dir="${withval}"
-    LDFLAGS="${LDFLAGS} -L${withval}" ])
+      LDFLAGS="${LDFLAGS} -L${withval}" ])
 
-AC_ARG_WITH(ncurses-includes,
-    AS_HELP_STRING(--with-ncurses-includes=DIR,location of the ncurses includes files),
+AC_ARG_WITH([ncurses-headers],
+    AS_HELP_STRING([--with-ncurses-headers=DIR],[location of the ncurses headers]),
     [CPPFLAGS="${CPPFLAGS} -I${withval}"])
 
 AC_ARG_WITH([ext2fs],
-    AS_HELP_STRING(--without-ext2fs,disabled use of the ext2fs library (default is NO)),
-    [	use_ext2fs="n" ])
+    AS_HELP_STRING([--without-ext2fs],[disable ext2fs support @<:@default=no@:>@]),
+    [],
+    [ use_ext2fs="yes" ])
 
-AC_ARG_WITH(ext2fs-lib,
-    AS_HELP_STRING(--with-ext2fs-lib=DIR,location of the ext2fs library),
+AC_ARG_WITH([ext2fs-lib],
+    AS_HELP_STRING([--with-ext2fs-lib=DIR],[location of the ext2fs library]),
     [ ext2fs_lib_a="${withval}/libext2fs.a"
-    LDFLAGS="${LDFLAGS} -L${withval}" ])
+      LDFLAGS="${LDFLAGS} -L${withval}" ])
 
-AC_ARG_WITH(ext2fs-includes,
-    AS_HELP_STRING(--with-ext2fs-includes=DIR,location of the ext2fs includes files),
+AC_ARG_WITH([ext2fs-headers],
+    AS_HELP_STRING([--with-ext2fs-headers=DIR],[location of the ext2fs headers]),
     [CPPFLAGS="${CPPFLAGS} -I${withval}"])
 
-AC_ARG_WITH(com_err-lib,
-    AS_HELP_STRING(--with-com_err-lib=DIR,location of the com_err library),
+AC_ARG_WITH([com_err-lib],
+    AS_HELP_STRING([--with-com_err-lib=DIR],[location of the com_err library]),
     [ com_err_lib_a="${withval}/libcom_err.a"
-    LDFLAGS="${LDFLAGS} -L${withval}" ])
+       LDFLAGS="${LDFLAGS} -L${withval}" ])
 
-AC_ARG_WITH(com_err-includes,
-    AS_HELP_STRING(--with-com_err-includes=DIR,location of the com_err includes files),
+AC_ARG_WITH([com_err-headers],
+    AS_HELP_STRING([--with-com_err-headers=DIR],[location of the com_err headers]),
     [CPPFLAGS="${CPPFLAGS} -I${withval}"])
 
 AC_ARG_WITH([jpeg],
-    AS_HELP_STRING(--without-jpeg,disabled use of the jpeg library (default is NO)),
-    [	use_jpeg="n" ])
+    AS_HELP_STRING([--without-jpeg],[disable use of the jpeg library @<:@default=no@:>@]),
+    [],
+    [ use_jpeg="yes" ])
 
 #AC_ARG_WITH(jpegmmx-lib,
 #    AS_HELP_STRING(--with-jpegmmx-lib=DIR,location of the jpeg library),
 #    [ jpegmmx_lib_a="${withval}/libjpeg-mmx.a"
 #    LDFLAGS="${LDFLAGS} -L${withval}" ])
 
-AC_ARG_WITH(jpeg-lib,
-    AS_HELP_STRING(--with-jpeg-lib=DIR,location of the jpeg library),
+AC_ARG_WITH([jpeg-lib],
+    AS_HELP_STRING([--with-jpeg-lib=DIR],[location of the jpeg library]),
     [ jpeg_lib_a="${withval}/libjpeg.a"
-    LDFLAGS="${LDFLAGS} -L${withval}" ])
+      LDFLAGS="${LDFLAGS} -L${withval}" ])
 
-AC_ARG_WITH(jpeg-includes,
-    AS_HELP_STRING(--with-jpeg-includes=DIR,location of the jpeg includes files),
+AC_ARG_WITH([jpeg-headers],
+    AS_HELP_STRING([--with-jpeg-headers=DIR],[location of the jpeg headers]),
     [CPPFLAGS="${CPPFLAGS} -I${withval}"])
 
 AC_ARG_WITH([ntfs], 
-    AS_HELP_STRING(--without-ntfs,disabled use of the ntfs library (default is NO)),
-    [	use_ntfs="n" ])
+    AS_HELP_STRING([--without-ntfs],[disable use of the ntfs library @<:@default=no@:>@]),
+    [],
+    [ use_ntfs="yes" ])
 
-AC_ARG_WITH(ntfs-lib,
-    AS_HELP_STRING(--with-ntfs-lib=DIR,location of the ntfs library),
+AC_ARG_WITH([ntfs-lib],
+    AS_HELP_STRING([--with-ntfs-lib=DIR],[location of the ntfs library]),
     [ ntfs_lib_a="${withval}/libntfs.a"
-      LDFLAGS="${LDFLAGS} -L${withval}"
-    ])
+      LDFLAGS="${LDFLAGS} -L${withval}" ])
 
-AC_ARG_WITH(ntfs-includes,
-    AS_HELP_STRING(--with-ntfs-includes=DIR,location of the ntfs includes files),
+AC_ARG_WITH([ntfs-headers],
+    AS_HELP_STRING([--with-ntfs-headers=DIR],[location of the ntfs headers]),
     [CPPFLAGS="${CPPFLAGS} -I${withval}"])
 
-AC_ARG_WITH(dal-lib,
-    AS_HELP_STRING(--with-dal-lib=DIR,location of the dal library),
+AC_ARG_WITH([dal-lib],
+    AS_HELP_STRING([--with-dal-lib=DIR],[location of the dal library]),
     [ LDFLAGS="${LDFLAGS} -L${withval}" ])
 
 AC_ARG_WITH([reiserfs], 
-    AS_HELP_STRING(--without-reiserfs,disabled use of the reiserfs library (default is NO)),
-    [	use_reiserfs="n" ])
+    AS_HELP_STRING([--without-reiserfs],[disable use of the reiserfs library @<:@default=no@:>@]),
+    [],
+    [ use_reiserfs="yes" ])
 
-AC_ARG_WITH(reiserfs-lib,
-    AS_HELP_STRING(--with-reiserfs-lib=DIR,location of the reiserfs library),
+AC_ARG_WITH([reiserfs-lib],
+    AS_HELP_STRING([--with-reiserfs-lib=DIR],[location of the reiserfs library]),
     [ reiserfs_lib_a="${withval}/libreiserfs.a"
-    LDFLAGS="${LDFLAGS} -L${withval}" ])
+      LDFLAGS="${LDFLAGS} -L${withval}" ])
 
-AC_ARG_WITH(reiserfs-includes,
-    AS_HELP_STRING(--with-reiserfs-includes=DIR,location of the reiserfs includes files),
+AC_ARG_WITH([reiserfs-headers],
+    AS_HELP_STRING([--with-reiserfs-headers=DIR],[location of the reiserfs headers]),
     [CPPFLAGS="${CPPFLAGS} -I${withval}"])
 
 AC_ARG_WITH([ewf], 
-    AS_HELP_STRING(--without-ewf,disabled use of the ewf library (default is NO)),
-    [	use_ewf="n" ])
+    AS_HELP_STRING([--without-ewf],[disable use of libewf @<:@default=no@:>@]),
+    [],
+    [ use_ewf="yes" ])
 
-AC_ARG_WITH(ewf-lib,
-    AS_HELP_STRING(--with-ewf-lib=DIR,location of the ewf library),
+AC_ARG_WITH([ewf-lib],
+    AS_HELP_STRING([--with-ewf-lib=DIR],[location of the ewf library]),
     [ ewf_lib_a="${withval}/libewf.a"
-    LDFLAGS="${LDFLAGS} -L${withval}" ])
+      LDFLAGS="${LDFLAGS} -L${withval}" ])
 
-AC_ARG_WITH(ewf-includes,
-    AS_HELP_STRING(--with-ewf-includes=DIR,location of the ewf includes files),
+AC_ARG_WITH([ewf-headers],
+    AS_HELP_STRING([--with-ewf-headers=DIR],[location of the ewf headers]),
     [CPPFLAGS="${CPPFLAGS} -I${withval}"])
 
 AC_ARG_WITH([iconv], 
-    AS_HELP_STRING(--without-iconv,disabled use of the iconv library (default is NO)),
-    [	use_iconv="n" ])
+    AS_HELP_STRING([--without-iconv],[disable use of the iconv library @<:@default=no@:>@]),
+    [],
+    [ use_iconv="yes" ])
 
-AC_ARG_WITH(iconv-lib,
-    AS_HELP_STRING(--with-iconv-lib=DIR,location of the iconv library),
+AC_ARG_WITH([iconv-lib],
+    AS_HELP_STRING([--with-iconv-lib=DIR],[location of the iconv library]),
     [ iconv_lib_a="${withval}/libiconv.a"
-    LDFLAGS="${LDFLAGS} -L${withval}" ])
+      LDFLAGS="${LDFLAGS} -L${withval}" ])
 
-AC_ARG_WITH(iconv-includes,
-    AS_HELP_STRING(--with-iconv-includes=DIR,location of the iconv includes files),
+AC_ARG_WITH([iconv-headers],
+    AS_HELP_STRING([--with-iconv-headers=DIR],[location of the iconv headers]),
     [CPPFLAGS="${CPPFLAGS} -I${withval}"])
 
-AC_ARG_WITH(giconv-lib,
-    AS_HELP_STRING(--with-giconv-lib=DIR,location of the giconv library),
+AC_ARG_WITH([giconv-lib],
+    AS_HELP_STRING([--with-giconv-lib=DIR],[location of the giconv library]),
     [ iconv_lib_a="${withval}/libgiconv.a"
-    LDFLAGS="${LDFLAGS} -L${withval}" ])
+      LDFLAGS="${LDFLAGS} -L${withval}" ])
 
-AC_ARG_WITH(giconv-includes,
-    AS_HELP_STRING(--with-giconv-includes=DIR,location of the giconv includes files),
+AC_ARG_WITH([giconv-headers],
+    AS_HELP_STRING([--with-giconv-headers=DIR],[location of the giconv headers]),
     [CPPFLAGS="${CPPFLAGS} -I${withval}"])
 
 #AC_ARG_WITH([carvpath], 
-#    AS_HELP_STRING(--without-carvpath,disabled use of the carvpath library (default is NO)),
-#    [	use_carvpath="n" ])
+#    AS_HELP_STRING([--without-carvpath],[disable use of the carvpath library @<:@default=no@:>@]),
+#    [],
+#    [ use_carvpath="yes" ])
 #
-#AC_ARG_WITH(carvpath-lib,
-#    AS_HELP_STRING(--with-carvpath-lib=DIR,location of the carvpath library),
+#AC_ARG_WITH([carvpath-lib],
+#    AS_HELP_STRING([--with-carvpath-lib=DIR],[location of the carvpath library]),
 #    [ carvpath_lib_a="${withval}/libcarvpath.a"
-#    LDFLAGS="${LDFLAGS} -L${withval}" ])
+#      LDFLAGS="${LDFLAGS} -L${withval}" ])
 #
-#AC_ARG_WITH(carvpath-includes,
-#    AS_HELP_STRING(--with-carvpath-includes=DIR,location of the carvpath includes files),
+#AC_ARG_WITH([carvpath-headers],
+#    AS_HELP_STRING([--with-carvpath-headers=DIR],[location of the carvpath headers]),
 #    [CPPFLAGS="${CPPFLAGS} -I${withval}"])
 
 AC_ARG_ENABLE([sudo],
-    AS_HELP_STRING(--enable-sudo,enable use of sudo (default is NO)),
+    AS_HELP_STRING([--enable-sudo],[enable use of sudo @<:@default=no@:>@]),
     [case "${enableval}" in
-       yes) use_sudo=true ;;
-       no)  use_sudo=false ;;
+       yes) use_sudo=yes ;;
+       no)  use_sudo=no ;;
        *) AC_MSG_ERROR([bad value ${enableval} for --enable-sudo]) ;;
      esac],
-     [use_sudo=false])
+     [use_sudo=no])
 
-AC_ARG_WITH(sudo-bin,
-    AS_HELP_STRING(--with-sudo-bin=PROG,location of the sudo binary),
+AC_ARG_WITH([sudo-bin],
+    AS_HELP_STRING([--with-sudo-bin=PROG],[location of the sudo binary]),
     [SUDO_BIN="${withval}"])
 
 AC_ARG_ENABLE([missing-uuid-ok],
-    AS_HELP_STRING(--enable-missing-uuid-ok, force compilation even if both uuidgen and uuid_generate are missing, for developpement only (default is NO)),
+    AS_HELP_STRING([--enable-missing-uuid-ok], [force compilation even if both uuidgen and uuid_generate are missing, for development only @<:@default=no@:>@]),
     [case "${enableval}" in
-       yes) missing_uuid_ok=true ;;
-       no)  missing_uuid_ok=false ;;
+       yes) missing_uuid_ok=yes ;;
+       no)  missing_uuid_ok=no ;;
        *) AC_MSG_ERROR([bad value ${enableval} for --enable-missing_uuid_ok]) ;;
      esac],
-     [missing_uuid_ok=false])
+     [missing_uuid_ok=no])
 
 use_icon=no
 
@@ -210,7 +217,7 @@
 # IMOO progsreiserfs need to check for headers file presence instead
 case "$target" in
     *freebsd4)
-	AC_DEFINE([__freebsd__], 1,[Define for freebsd4 target and progsreiserfs compatibility])
+    AC_DEFINE([__freebsd__], 1,[Define for freebsd4 target and progsreiserfs compatibility])
     ;;
 esac
 
@@ -223,9 +230,10 @@
 AC_PROG_MAKE_SET
 
 AC_ARG_VAR(WINDRES, [Windows Resource compiler tool path])
-AC_PATH_TOOL(WINDRES,windres,
-	[AC_MSG_WARN(Could not find a windres tool in your PATH.)]
-	)
+AC_PATH_TOOL([WINDRES],[windres],[missing])
+if test "x$WINDRES" = "xmissing"; then
+	AC_MSG_WARN([Could not find a windres tool in your PATH.])
+fi
 AC_SUBST(WINDRES)
 
 # Enable large file support.
@@ -250,7 +258,7 @@
 #
 # First, check if there's a working iconv in libc (ie. if the test program
 # compiles and links without any extra flags).
-if test -z "${use_iconv}"; then
+if test "x${use_iconv}" != "xno"; then
 AC_MSG_CHECKING(iconv support)
 AC_LINK_IFELSE([[#include <iconv.h>
 int main(int argc,char **argv) { iconv_open("foo","bar"); }]]
@@ -340,7 +348,7 @@
 ]])
 AC_CHECK_HEADERS([ext2fs/ext2fs.h],,
               use_ext2fs=no
-              AC_MSG_WARN(Disable use of ext2fs library),
+              AC_MSG_WARN(ext2fs/ext2fs.h not found; disabling EXT2 support),
 [[
 #if HAVE_SYS_TYPES_H
 # include <sys/types.h>
@@ -350,19 +358,23 @@
 
 AC_CHECK_HEADERS([libewf.h],,
               use_ewf=no
-              AC_MSG_WARN(Disable use of ewf library))
+              AC_MSG_WARN(libewf.h not found; disabling EWF support))
 
 AC_CHECK_HEADERS([jpeglib.h],,
               use_jpeg=no
-              AC_MSG_WARN(Disable use of jpeg library))
+              AC_MSG_WARN(jpeglib.h not found; disabling JPEG support))
 
-AC_CHECK_HEADERS([ntfs/attrib.h ntfs/volume.h],,
+AC_CHECK_HEADERS([ntfs/attrib.h],,
               use_ntfs=no
-              AC_MSG_WARN(Disable use of ntfs library))
+              AC_MSG_WARN(ntfs/attrib.h not found; disabling NTFS support))
+
+AC_CHECK_HEADERS([ntfs/volume.h],,
+              use_ntfs=no
+              AC_MSG_WARN(ntfs/volume.h not found; disabling NTFS support))
 
 #AC_CHECK_HEADERS([libcarvpath.h],,
 #              use_carvpath=no
-#              AC_MSG_WARN(Disable use of carvpath library))
+#              AC_MSG_WARN(libcarvpath.h not found; disabling carvpath support))
 
 # Checks for typedefs, structures, and compiler characteristics.
 AC_C_CONST
@@ -406,7 +418,7 @@
 #AC_FUNC_MALLOC
 
 # Checks for libraries.
-if test -z "${use_ncurses}"; then
+if test "x${use_ncurses}" != "xno"; then
   AC_CHECK_LIB(ncursesw, initscr, [ ncurses_lib="ncursesw" ])
  if test -z "${ncurses_lib}"; then
   AC_CHECK_LIB( ncurses, initscr, [ ncurses_lib="ncurses" ])
@@ -442,10 +454,10 @@
   AC_MSG_WARN(Use of ncurses library disabled)
 fi
 
-if test -z "${use_ext2fs}" -o -z "${use_ewf}"; then
+if test "x${use_ext2fs}" != "xyes" -o "x${use_ewf}" != "xyes"; then
   AC_CHECK_LIB(crypto, MD5_Init, [], AC_MSG_WARN(Missing function: MD5_Init in library libcrypto))
 fi
-if test -z "${use_ext2fs}"; then
+if test "${use_ext2fs}" != "xno"; then
   AC_CHECK_LIB(ext2fs,ext2fs_open,[
       AC_DEFINE([HAVE_LIBEXT2FS],1,[Define to 1 if you have the ext2fs library (-lext2fs).])
       if test "${ext2fs_lib_a}" = ""; then
@@ -468,7 +480,7 @@
   AC_MSG_WARN(Use of ext2fs library disabled)
 fi
 
-if test -z "${use_jpeg}"; then
+if test "${use_jpeg}" != "xno"; then
 #  AC_CHECK_LIB(jpeg-mmx,jpeg_std_error,[
 #      AC_DEFINE([HAVE_LIBJPEG],1,[Define to 1 if you have the jpeg library (-ljpeg-mmx).])
 #      if test "${jpegmmx_lib_a}" = ""; then
@@ -490,7 +502,7 @@
   AC_MSG_WARN(Use of jpeg library disabled)
 fi
 
-if test -z "${use_ntfs}"; then
+if test "${use_ntfs}" != "xno"; then
   AC_CHECK_LIB(ntfs,ntfs_device_mount,
   [
     AC_DEFINE([HAVE_LIBNTFS],1,[Define to 1 if you have the ntfs library (-lntfs).])
@@ -514,7 +526,7 @@
   AC_MSG_WARN(Use of ntfs library disabled)
 fi
 
-if test -z "${use_reiserfs}"; then
+if test "${use_reiserfs}" != "xno"; then
   AC_CHECK_LIB(reiserfs,libreiserfs_get_version,[
   AC_DEFINE([HAVE_LIBREISERFS],1,[Define to 1 if you have the reiserfs library (-lreiserfs).])
   if test "${reiserfs_lib_a}" = ""; then
@@ -527,7 +539,7 @@
   AC_MSG_WARN(Use of reiserfs library disabled)
 fi
 
-#if test -z "${use_carvpath}"; then
+#if test "${use_carvpath}" != "xno"; then
 #  AC_CHECK_LIB(carvpath,carvpath_top_entity,[
 #      AC_DEFINE([HAVE_LIBCARVPATH],1,[Define to 1 if you have the carvpath library (-lcarvpath).])
 #      if test "${carvpath_lib_a}" = ""; then
@@ -566,7 +578,7 @@
 
 if test "${found_uuid_function}" = "no";
 then
-  if test "${missing_uuid_ok}" = "true";
+  if test "${missing_uuid_ok}" = "yes";
   then
     AC_MSG_WARN(No uuid_create or uuid_generate function in library libuuid or uuidgen function present)
   else
@@ -576,7 +588,7 @@
 
 AC_CHECK_LIB(z, compress2, [], AC_MSG_WARN(Missing function: compress2 in library zlib))
 #
-if test -z "${use_ewf}"; then
+if test "${use_ewf}" != "xno"; then
   AC_CHECK_LIB(ewf,libewf_check_file_signature,[
   AC_DEFINE([HAVE_LIBEWF],1,[Define to 1 if you have the ewf library (-lewf).])
   if test "${ewf_lib_a}" = ""; then
@@ -586,15 +598,15 @@
   fi
   AC_TRY_COMPILE([#include <libewf.h>],
           [void foo() { libewf_get_bytes_per_sector(NULL,NULL); }],
-	  ac_cv_c_libewf_get_bytes_per_sector_have_two_arguments=yes,
-	  ac_cv_c_libewf_get_bytes_per_sector_have_two_arguments=no)
+      ac_cv_c_libewf_get_bytes_per_sector_have_two_arguments=yes,
+      ac_cv_c_libewf_get_bytes_per_sector_have_two_arguments=no)
   if test "${ac_cv_c_libewf_get_bytes_per_sector_have_two_arguments}" != "no"; then
         AC_DEFINE([LIBEWF_GET_BYTES_PER_SECTOR_HAVE_TWO_ARGUMENTS], 1, [Define if libewf_get_bytes_per_sector takes two parameters.])
   fi
   AC_TRY_COMPILE([#include <libewf.h>],
           [void foo() { libewf_get_media_size(NULL,NULL); }],
-	  ac_cv_c_libewf_get_media_size_have_two_arguments=yes,
-	  ac_cv_c_libewf_get_media_size_have_two_arguments=no)
+      ac_cv_c_libewf_get_media_size_have_two_arguments=yes,
+      ac_cv_c_libewf_get_media_size_have_two_arguments=no)
   if test "${ac_cv_c_libewf_get_media_size_have_two_arguments}" != "no"; then
         AC_DEFINE([LIBEWF_GET_MEDIA_SIZE_HAVE_TWO_ARGUMENTS], 1, [Define if libewf_get_media_size takes two parameters.])
   fi
@@ -623,9 +635,9 @@
 
 case "$target" in
   *hpux*)
-	;;
+    ;;
   *)
-  	AC_CHECK_FUNCS(pread)
+    AC_CHECK_FUNCS(pread)
   ;;
 esac
 
@@ -634,11 +646,11 @@
   AC_MSG_ERROR(No mkdir function detected)
 fi
 
-if test "$ac_cv_func_execv" = "yes" -a "$use_sudo" = "true";
+if test "$ac_cv_func_execv" = "yes" -a "$use_sudo" = "yes";
 then
     if test -z "$SUDO_BIN"; then
         AC_PATH_PROG([SUDO], [sudo], [AC_MSG_ERROR([sudo requested but not found])])
-	SUDO_BIN="$SUDO"
+    SUDO_BIN="$SUDO"
     fi
     AC_DEFINE_UNQUOTED([SUDO_BIN], "$SUDO_BIN", [Path to sudo for privileged operations])
 fi
